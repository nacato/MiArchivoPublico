{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP1FqVbmkUz3Z2zQGTd0QDs",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/nacato/MiArchivoPublico/blob/main/Proyecto%20de%20Integracion%20Curricular\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "id": "uNykmDDxv3VC",
        "outputId": "84c12355-5422-42a4-a81b-08250c3f6231"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-60a97288-89ed-47e1-85f3-77f02f229822\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-60a97288-89ed-47e1-85f3-77f02f229822\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving Tesis_MichaelÑacato_TabulacionDatos_293Estudiantes.xlsx to Tesis_MichaelÑacato_TabulacionDatos_293Estudiantes.xlsx\n",
            "User uploaded file \"Tesis_MichaelÑacato_TabulacionDatos_293Estudiantes.xlsx\" with length 54974 bytes\n"
          ]
        }
      ],
      "source": [
        "# prompt: subir mi archivo\n",
        "\n",
        "from google.colab import files\n",
        "uploaded = files.upload()\n",
        "for fn in uploaded.keys():\n",
        "  print('User uploaded file \"{name}\" with length {length} bytes'.format(\n",
        "      name=fn, length=len(uploaded[fn])))\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "qBQLSdHKwHRA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_excel('Tesis_MichaelÑacato_TabulacionDatos_293Estudiantes.xlsx')"
      ],
      "metadata": {
        "id": "gdhu5WUgwL_j"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df.columns = ['ID', 'Colegio', 'Edad', 'Genero', 'Institucion Educativa',\n",
        "              'Area de Residencia', 'Año Escolar', 'Idiomas',\n",
        "              'Nivel Educativo Padres', 'Ingreso Familiar',\n",
        "              'Actividades de Interes', 'Actividades Gustan Realizar',\n",
        "              'Asignaturas Favoritas', 'Carreras Atractivas',\n",
        "              'Influencia Estudio Futuro', 'Maestros Ciencia/tecnologia',\n",
        "              'Opiniones Amigos Ciencia/Tecnologia', 'Apoyo Familiar Ciencia/Mate',\n",
        "              'Obstaculos Carrera STEAM', 'Sectores Interes Futuro',\n",
        "              'Optimismo Futuro Ciencia/Tecnologia', 'Estabilidad Economica',\n",
        "              'Impacto Social/Tecnologico', 'Innovaciones Tecnologicas',\n",
        "              'Avance Tecnologico', 'Probabilidad Carrera STEAM',\n",
        "              'Informacion Opciones Carrera STEAM']"
      ],
      "metadata": {
        "id": "djouQrVEwQtq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 843
        },
        "id": "U9ULh0G2wVPM",
        "outputId": "1decb493-1bfd-4c2e-f0ff-40eecd986ab9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      ID                Colegio     Edad     Genero Institucion Educativa  \\\n",
              "0      1        BORJA MONSERRAT  16 años  Masculino               Privada   \n",
              "1      2        BORJA MONSERRAT  16 años   Femenino               Privada   \n",
              "2      3        BORJA MONSERRAT  15 años  Masculino               Privada   \n",
              "3      4        BORJA MONSERRAT  16 años   Femenino               Privada   \n",
              "4      5        BORJA MONSERRAT  16 años   Femenino               Privada   \n",
              "..   ...                    ...      ...        ...                   ...   \n",
              "288  289  TECNOLOGICO PICHINCHA  16 años  Masculino               Privada   \n",
              "289  290  TECNOLOGICO PICHINCHA  15 años  Masculino               Privada   \n",
              "290  291  TECNOLOGICO PICHINCHA  17 años  Masculino               Privada   \n",
              "291  292  TECNOLOGICO PICHINCHA  17 años  Masculino               Privada   \n",
              "292  293  TECNOLOGICO PICHINCHA  16 años  Masculino               Privada   \n",
              "\n",
              "    Area de Residencia              Año Escolar          Idiomas  \\\n",
              "0               Urbana  Tercero de bachillerato  Inglés;Español;   \n",
              "1               Urbana  Tercero de bachillerato         Español;   \n",
              "2                Rural  Segundo de bachillerato          Inglés;   \n",
              "3                Rural  Segundo de bachillerato         Español;   \n",
              "4               Urbana  Segundo de bachillerato  Español;Inglés;   \n",
              "..                 ...                      ...              ...   \n",
              "288             Urbana  Segundo de bachillerato         Español;   \n",
              "289             Urbana  Segundo de bachillerato         Español;   \n",
              "290              Rural  Segundo de bachillerato         Español;   \n",
              "291             Urbana  Tercero de bachillerato         Español;   \n",
              "292             Urbana  Segundo de bachillerato         Español;   \n",
              "\n",
              "    Nivel Educativo Padres Ingreso Familiar  ... Apoyo Familiar Ciencia/Mate  \\\n",
              "0                Postgrado     Más de $3000  ...                    Opción 3   \n",
              "1                Postgrado     Más de $3000  ...                    Opción 1   \n",
              "2               Secundaria    $2000 - $3000  ...                    Opción 1   \n",
              "3              Universidad    $1001 - $2000  ...                    Opción 1   \n",
              "4             Bachillerato     $501 - $1000  ...                    Opción 1   \n",
              "..                     ...              ...  ...                         ...   \n",
              "288           Bachillerato    $1001 - $2000  ...                    Opción 5   \n",
              "289           Bachillerato     $501 - $1000  ...                    Opción 5   \n",
              "290             Secundaria     $501 - $1000  ...                    Opción 5   \n",
              "291            Universidad    $1001 - $2000  ...                    Opción 4   \n",
              "292            Universidad    $2000 - $3000  ...                    Opción 5   \n",
              "\n",
              "                              Obstaculos Carrera STEAM  \\\n",
              "0    Falta de apoyo familiar;Dificultad en las mate...   \n",
              "1                                 Falta de motivación;   \n",
              "2                        Falta de recursos educativos;   \n",
              "3                          Dificultad en las materias;   \n",
              "4    No tengo obstáculos, solo que no se que es lo ...   \n",
              "..                                                 ...   \n",
              "288                               Falta de motivación;   \n",
              "289                        Dificultad en las materias;   \n",
              "290                        Dificultad en las materias;   \n",
              "291    Dificultad en las materias;Falta de motivación;   \n",
              "292                        Dificultad en las materias;   \n",
              "\n",
              "    Sectores Interes Futuro Optimismo Futuro Ciencia/Tecnologia  \\\n",
              "0            Medio ambiente                            Opción 3   \n",
              "1                      Arte                            Opción 3   \n",
              "2                     Salud                            Opción 2   \n",
              "3                      Arte                            Opción 5   \n",
              "4                Tecnología                            Opción 3   \n",
              "..                      ...                                 ...   \n",
              "288              Tecnología                            Opción 4   \n",
              "289              Tecnología                            Opción 4   \n",
              "290              Tecnología                            Opción 1   \n",
              "291              Tecnología                            Opción 5   \n",
              "292       Educación (T/S/A)                            Opción 3   \n",
              "\n",
              "    Estabilidad Economica                  Impacto Social/Tecnologico  \\\n",
              "0                Opción 3              Contribuir a la sostenibilidad   \n",
              "1                Opción 3              Contribuir a la sostenibilidad   \n",
              "2                Opción 2  Mejorar la calidad de vida de las personas   \n",
              "3                Opción 5  Mejorar la calidad de vida de las personas   \n",
              "4                Opción 5                          No estoy seguro(a)   \n",
              "..                    ...                                         ...   \n",
              "288              Opción 5              Contribuir a la sostenibilidad   \n",
              "289              Opción 5  Mejorar la calidad de vida de las personas   \n",
              "290              Opción 5  Mejorar la calidad de vida de las personas   \n",
              "291              Opción 4  Mejorar la calidad de vida de las personas   \n",
              "292              Opción 4              Contribuir a la sostenibilidad   \n",
              "\n",
              "    Innovaciones Tecnologicas Avance Tecnologico Probabilidad Carrera STEAM  \\\n",
              "0                    Opción 4          Educación                   Opción 4   \n",
              "1                    Opción 2         Transporte                   Opción 3   \n",
              "2                    Opción 2          Educación                   Opción 3   \n",
              "3                    Opción 3          Educación                   Opción 3   \n",
              "4                    Opción 4          Educación                   Opción 2   \n",
              "..                        ...                ...                        ...   \n",
              "288                  Opción 4            Energía                   Opción 4   \n",
              "289                  Opción 5              Salud                   Opción 2   \n",
              "290                  Opción 1              Salud                   Opción 5   \n",
              "291                  Opción 5              Salud                   Opción 4   \n",
              "292                  Opción 4          Educación                   Opción 4   \n",
              "\n",
              "    Informacion Opciones Carrera STEAM  \n",
              "0                               Neutro  \n",
              "1                               Neutro  \n",
              "2                               Neutro  \n",
              "3                               Neutro  \n",
              "4                               Neutro  \n",
              "..                                 ...  \n",
              "288                             Neutro  \n",
              "289                   Poco informado/a  \n",
              "290                   Poco informado/a  \n",
              "291                             Neutro  \n",
              "292                             Neutro  \n",
              "\n",
              "[293 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ddf30e08-61bc-4d88-a3ae-2371695ae578\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Colegio</th>\n",
              "      <th>Edad</th>\n",
              "      <th>Genero</th>\n",
              "      <th>Institucion Educativa</th>\n",
              "      <th>Area de Residencia</th>\n",
              "      <th>Año Escolar</th>\n",
              "      <th>Idiomas</th>\n",
              "      <th>Nivel Educativo Padres</th>\n",
              "      <th>Ingreso Familiar</th>\n",
              "      <th>...</th>\n",
              "      <th>Apoyo Familiar Ciencia/Mate</th>\n",
              "      <th>Obstaculos Carrera STEAM</th>\n",
              "      <th>Sectores Interes Futuro</th>\n",
              "      <th>Optimismo Futuro Ciencia/Tecnologia</th>\n",
              "      <th>Estabilidad Economica</th>\n",
              "      <th>Impacto Social/Tecnologico</th>\n",
              "      <th>Innovaciones Tecnologicas</th>\n",
              "      <th>Avance Tecnologico</th>\n",
              "      <th>Probabilidad Carrera STEAM</th>\n",
              "      <th>Informacion Opciones Carrera STEAM</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>BORJA MONSERRAT</td>\n",
              "      <td>16 años</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Urbana</td>\n",
              "      <td>Tercero de bachillerato</td>\n",
              "      <td>Inglés;Español;</td>\n",
              "      <td>Postgrado</td>\n",
              "      <td>Más de $3000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Falta de apoyo familiar;Dificultad en las mate...</td>\n",
              "      <td>Medio ambiente</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Contribuir a la sostenibilidad</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Educación</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Neutro</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>BORJA MONSERRAT</td>\n",
              "      <td>16 años</td>\n",
              "      <td>Femenino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Urbana</td>\n",
              "      <td>Tercero de bachillerato</td>\n",
              "      <td>Español;</td>\n",
              "      <td>Postgrado</td>\n",
              "      <td>Más de $3000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 1</td>\n",
              "      <td>Falta de motivación;</td>\n",
              "      <td>Arte</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Contribuir a la sostenibilidad</td>\n",
              "      <td>Opción 2</td>\n",
              "      <td>Transporte</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Neutro</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>BORJA MONSERRAT</td>\n",
              "      <td>15 años</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Rural</td>\n",
              "      <td>Segundo de bachillerato</td>\n",
              "      <td>Inglés;</td>\n",
              "      <td>Secundaria</td>\n",
              "      <td>$2000 - $3000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 1</td>\n",
              "      <td>Falta de recursos educativos;</td>\n",
              "      <td>Salud</td>\n",
              "      <td>Opción 2</td>\n",
              "      <td>Opción 2</td>\n",
              "      <td>Mejorar la calidad de vida de las personas</td>\n",
              "      <td>Opción 2</td>\n",
              "      <td>Educación</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Neutro</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>BORJA MONSERRAT</td>\n",
              "      <td>16 años</td>\n",
              "      <td>Femenino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Rural</td>\n",
              "      <td>Segundo de bachillerato</td>\n",
              "      <td>Español;</td>\n",
              "      <td>Universidad</td>\n",
              "      <td>$1001 - $2000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 1</td>\n",
              "      <td>Dificultad en las materias;</td>\n",
              "      <td>Arte</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Mejorar la calidad de vida de las personas</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Educación</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Neutro</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>BORJA MONSERRAT</td>\n",
              "      <td>16 años</td>\n",
              "      <td>Femenino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Urbana</td>\n",
              "      <td>Segundo de bachillerato</td>\n",
              "      <td>Español;Inglés;</td>\n",
              "      <td>Bachillerato</td>\n",
              "      <td>$501 - $1000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 1</td>\n",
              "      <td>No tengo obstáculos, solo que no se que es lo ...</td>\n",
              "      <td>Tecnología</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>No estoy seguro(a)</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Educación</td>\n",
              "      <td>Opción 2</td>\n",
              "      <td>Neutro</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>288</th>\n",
              "      <td>289</td>\n",
              "      <td>TECNOLOGICO PICHINCHA</td>\n",
              "      <td>16 años</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Urbana</td>\n",
              "      <td>Segundo de bachillerato</td>\n",
              "      <td>Español;</td>\n",
              "      <td>Bachillerato</td>\n",
              "      <td>$1001 - $2000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Falta de motivación;</td>\n",
              "      <td>Tecnología</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Contribuir a la sostenibilidad</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Energía</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Neutro</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>289</th>\n",
              "      <td>290</td>\n",
              "      <td>TECNOLOGICO PICHINCHA</td>\n",
              "      <td>15 años</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Urbana</td>\n",
              "      <td>Segundo de bachillerato</td>\n",
              "      <td>Español;</td>\n",
              "      <td>Bachillerato</td>\n",
              "      <td>$501 - $1000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Dificultad en las materias;</td>\n",
              "      <td>Tecnología</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Mejorar la calidad de vida de las personas</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Salud</td>\n",
              "      <td>Opción 2</td>\n",
              "      <td>Poco informado/a</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>291</td>\n",
              "      <td>TECNOLOGICO PICHINCHA</td>\n",
              "      <td>17 años</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Rural</td>\n",
              "      <td>Segundo de bachillerato</td>\n",
              "      <td>Español;</td>\n",
              "      <td>Secundaria</td>\n",
              "      <td>$501 - $1000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Dificultad en las materias;</td>\n",
              "      <td>Tecnología</td>\n",
              "      <td>Opción 1</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Mejorar la calidad de vida de las personas</td>\n",
              "      <td>Opción 1</td>\n",
              "      <td>Salud</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Poco informado/a</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>291</th>\n",
              "      <td>292</td>\n",
              "      <td>TECNOLOGICO PICHINCHA</td>\n",
              "      <td>17 años</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Urbana</td>\n",
              "      <td>Tercero de bachillerato</td>\n",
              "      <td>Español;</td>\n",
              "      <td>Universidad</td>\n",
              "      <td>$1001 - $2000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Dificultad en las materias;Falta de motivación;</td>\n",
              "      <td>Tecnología</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Mejorar la calidad de vida de las personas</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Salud</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Neutro</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>292</th>\n",
              "      <td>293</td>\n",
              "      <td>TECNOLOGICO PICHINCHA</td>\n",
              "      <td>16 años</td>\n",
              "      <td>Masculino</td>\n",
              "      <td>Privada</td>\n",
              "      <td>Urbana</td>\n",
              "      <td>Segundo de bachillerato</td>\n",
              "      <td>Español;</td>\n",
              "      <td>Universidad</td>\n",
              "      <td>$2000 - $3000</td>\n",
              "      <td>...</td>\n",
              "      <td>Opción 5</td>\n",
              "      <td>Dificultad en las materias;</td>\n",
              "      <td>Educación (T/S/A)</td>\n",
              "      <td>Opción 3</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Contribuir a la sostenibilidad</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Educación</td>\n",
              "      <td>Opción 4</td>\n",
              "      <td>Neutro</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>293 rows × 27 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddf30e08-61bc-4d88-a3ae-2371695ae578')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ddf30e08-61bc-4d88-a3ae-2371695ae578 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ddf30e08-61bc-4d88-a3ae-2371695ae578');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a3e94b5a-351a-40ed-b225-66bd10c743ef\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a3e94b5a-351a-40ed-b225-66bd10c743ef')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a3e94b5a-351a-40ed-b225-66bd10c743ef button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_aee1e2a4-8e1a-4bb5-9da7-e812ac17d45e\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_aee1e2a4-8e1a-4bb5-9da7-e812ac17d45e button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.applymap(lambda x: x.strip().replace('\\n', ' ').replace('\\r', '') if isinstance(x, str) else x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0kxpw4-AwaYT",
        "outputId": "754ddec0-fd80-4bec-c4c7-77ee96151d06"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-9-4e5f7ae32842>:1: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n",
            "  df = df.applymap(lambda x: x.strip().replace('\\n', ' ').replace('\\r', '') if isinstance(x, str) else x)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_dummies = pd.get_dummies(df['Genero'], prefix='Genero')\n",
        "\n",
        "df = pd.concat([df, df_dummies], axis=1)\n",
        "\n",
        "df['Edad'] = df['Edad'].str.replace('años', '').astype(int)\n",
        "\n",
        "opciones_dict = {\n",
        "    'Opción 1': 1,\n",
        "    'Opción 2': 2,\n",
        "    'Opción 3': 3,\n",
        "    'Opción 4': 4,\n",
        "    'Opción 5': 5\n",
        "}\n",
        "\n",
        "columnas_categoricas = [\n",
        "    'Optimismo Futuro Ciencia/Tecnologia','Probabilidad Carrera STEAM','Apoyo Familiar Ciencia/Mate','Maestros Ciencia/tecnologia',\n",
        "    'Estabilidad Economica',\n",
        "    'Innovaciones Tecnologicas'\n",
        "]\n",
        "\n",
        "for columna in columnas_categoricas:\n",
        "    df[columna] = df[columna].map(opciones_dict)\n",
        "\n",
        "ingreso_dict = {\n",
        "    'Más de $3000': 3500,\n",
        "    '$2000 - $3000': 2500,\n",
        "    '$1001 - $2000': 1500,\n",
        "    '$501 - $1000': 750,\n",
        "    'Menos de $500': 250\n",
        "}\n",
        "\n",
        "df['Ingreso Familiar'] = df['Ingreso Familiar'].map(ingreso_dict)\n",
        "\n",
        "nivel_educativo_dict = {\n",
        "    'Primaria': 1,\n",
        "    'Secundaria': 2,\n",
        "    'Bachillerato': 3,\n",
        "    'Universidad': 4,\n",
        "    'Postgrado': 5\n",
        "}\n",
        "df['Nivel Educativo Padres'] = df['Nivel Educativo Padres'].map(nivel_educativo_dict)"
      ],
      "metadata": {
        "id": "4DPAaGlRwexz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_numeric"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        },
        "id": "eN3BX_bhwrdc",
        "outputId": "790dad8d-f17a-4643-8091-a571c3957228"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      ID  Edad  Nivel Educativo Padres  Ingreso Familiar  \\\n",
              "0      1    16                       5              3500   \n",
              "1      2    16                       5              3500   \n",
              "2      3    15                       2              2500   \n",
              "3      4    16                       4              1500   \n",
              "4      5    16                       3               750   \n",
              "..   ...   ...                     ...               ...   \n",
              "288  289    16                       3              1500   \n",
              "289  290    15                       3               750   \n",
              "290  291    17                       2               750   \n",
              "291  292    17                       4              1500   \n",
              "292  293    16                       4              2500   \n",
              "\n",
              "     Maestros Ciencia/tecnologia  Apoyo Familiar Ciencia/Mate  \\\n",
              "0                              2                            3   \n",
              "1                              1                            1   \n",
              "2                              2                            1   \n",
              "3                              4                            1   \n",
              "4                              5                            1   \n",
              "..                           ...                          ...   \n",
              "288                            5                            5   \n",
              "289                            3                            5   \n",
              "290                            5                            5   \n",
              "291                            3                            4   \n",
              "292                            5                            5   \n",
              "\n",
              "     Optimismo Futuro Ciencia/Tecnologia  Estabilidad Economica  \\\n",
              "0                                      3                      3   \n",
              "1                                      3                      3   \n",
              "2                                      2                      2   \n",
              "3                                      5                      5   \n",
              "4                                      3                      5   \n",
              "..                                   ...                    ...   \n",
              "288                                    4                      5   \n",
              "289                                    4                      5   \n",
              "290                                    1                      5   \n",
              "291                                    5                      4   \n",
              "292                                    3                      4   \n",
              "\n",
              "     Innovaciones Tecnologicas  Probabilidad Carrera STEAM  Genero_Femenino  \\\n",
              "0                            4                           4                0   \n",
              "1                            2                           3                1   \n",
              "2                            2                           3                0   \n",
              "3                            3                           3                1   \n",
              "4                            4                           2                1   \n",
              "..                         ...                         ...              ...   \n",
              "288                          4                           4                0   \n",
              "289                          5                           2                0   \n",
              "290                          1                           5                0   \n",
              "291                          5                           4                0   \n",
              "292                          4                           4                0   \n",
              "\n",
              "     Genero_Masculino  Asignaturas_Matematica  Asignaturas_Fisica  \\\n",
              "0                   1                       0                   0   \n",
              "1                   0                       0                   0   \n",
              "2                   1                       1                   0   \n",
              "3                   0                       0                   0   \n",
              "4                   0                       0                   0   \n",
              "..                ...                     ...                 ...   \n",
              "288                 1                       0                   1   \n",
              "289                 1                       1                   0   \n",
              "290                 1                       0                   0   \n",
              "291                 1                       0                   0   \n",
              "292                 1                       0                   0   \n",
              "\n",
              "     Sector_de_interes_futuro_Tecnología  Sector_de_interes_futuro_Salud  \n",
              "0                                      0                               0  \n",
              "1                                      0                               0  \n",
              "2                                      0                               1  \n",
              "3                                      0                               0  \n",
              "4                                      1                               0  \n",
              "..                                   ...                             ...  \n",
              "288                                    1                               0  \n",
              "289                                    1                               0  \n",
              "290                                    1                               0  \n",
              "291                                    1                               0  \n",
              "292                                    0                               0  \n",
              "\n",
              "[293 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a32b5683-6f99-4770-8c15-823d7b8bbc56\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Edad</th>\n",
              "      <th>Nivel Educativo Padres</th>\n",
              "      <th>Ingreso Familiar</th>\n",
              "      <th>Maestros Ciencia/tecnologia</th>\n",
              "      <th>Apoyo Familiar Ciencia/Mate</th>\n",
              "      <th>Optimismo Futuro Ciencia/Tecnologia</th>\n",
              "      <th>Estabilidad Economica</th>\n",
              "      <th>Innovaciones Tecnologicas</th>\n",
              "      <th>Probabilidad Carrera STEAM</th>\n",
              "      <th>Genero_Femenino</th>\n",
              "      <th>Genero_Masculino</th>\n",
              "      <th>Asignaturas_Matematica</th>\n",
              "      <th>Asignaturas_Fisica</th>\n",
              "      <th>Sector_de_interes_futuro_Tecnología</th>\n",
              "      <th>Sector_de_interes_futuro_Salud</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>3500</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>16</td>\n",
              "      <td>5</td>\n",
              "      <td>3500</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>15</td>\n",
              "      <td>2</td>\n",
              "      <td>2500</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>1500</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>750</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>288</th>\n",
              "      <td>289</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>1500</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>289</th>\n",
              "      <td>290</td>\n",
              "      <td>15</td>\n",
              "      <td>3</td>\n",
              "      <td>750</td>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>290</th>\n",
              "      <td>291</td>\n",
              "      <td>17</td>\n",
              "      <td>2</td>\n",
              "      <td>750</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>291</th>\n",
              "      <td>292</td>\n",
              "      <td>17</td>\n",
              "      <td>4</td>\n",
              "      <td>1500</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>292</th>\n",
              "      <td>293</td>\n",
              "      <td>16</td>\n",
              "      <td>4</td>\n",
              "      <td>2500</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>293 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a32b5683-6f99-4770-8c15-823d7b8bbc56')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a32b5683-6f99-4770-8c15-823d7b8bbc56 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a32b5683-6f99-4770-8c15-823d7b8bbc56');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c75ae231-48b9-4d49-9d1d-2d1a8f80b52f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c75ae231-48b9-4d49-9d1d-2d1a8f80b52f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c75ae231-48b9-4d49-9d1d-2d1a8f80b52f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_53d101ab-595b-4aa1-b413-5f87eb52487e\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_numeric')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_53d101ab-595b-4aa1-b413-5f87eb52487e button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_numeric');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_numeric",
              "summary": "{\n  \"name\": \"df_numeric\",\n  \"rows\": 293,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 84,\n        \"min\": 1,\n        \"max\": 293,\n        \"num_unique_values\": 293,\n        \"samples\": [\n          85,\n          261,\n          46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 15,\n        \"max\": 18,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          15,\n          18,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nivel Educativo Padres\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          1,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ingreso Familiar\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 803,\n        \"min\": 250,\n        \"max\": 3500,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2500,\n          250,\n          1500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Maestros Ciencia/tecnologia\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          3,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Apoyo Familiar Ciencia/Mate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          2,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Optimismo Futuro Ciencia/Tecnologia\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          4,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estabilidad Economica\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          1,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Innovaciones Tecnologicas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Probabilidad Carrera STEAM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genero_Femenino\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genero_Masculino\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Asignaturas_Matematica\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Asignaturas_Fisica\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sector_de_interes_futuro_Tecnolog\\u00eda\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sector_de_interes_futuro_Salud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "df['Asignaturas_Matematica'] = df['Asignaturas Favoritas'].str.contains('Matemática', case=False, na=False).astype(int)\n",
        "df['Asignaturas_Fisica'] = df['Asignaturas Favoritas'].str.contains('Física', case=False, na=False).astype(int)\n",
        "df['Sector_de_interes_futuro_Tecnología'] = df['Sectores Interes Futuro'].str.contains('Tecnología', case=False, na=False).astype(int)\n",
        "df['Sector_de_interes_futuro_Salud'] = df['Sectores Interes Futuro'].str.contains('Salud', case=False, na=False).astype(int)\n",
        "df['Genero_Femenino'] = df['Genero_Femenino'].astype(int)\n",
        "df['Genero_Masculino'] = df['Genero_Masculino'].astype(int)\n",
        "\n",
        "df_numeric = df.select_dtypes(include=[np.number])\n",
        "correlation_matrix = df_numeric.corr()\n"
      ],
      "metadata": {
        "id": "qTPmZuWVwhfk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Pd6Pn6gYwo4l"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12, 8))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt='.2f')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 925
        },
        "id": "7T3vpnYcwmOK",
        "outputId": "ed703aa0-1e68-42ec-c224-a31e63a8eea1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Extraer las correlaciones con la variable 'Probabilidad Carrera STEAM'\n",
        "correlaciones_steam = correlation_matrix['Probabilidad Carrera STEAM'].sort_values(ascending=False)\n",
        "correlaciones_steam"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 586
        },
        "id": "jIG7QdvXw7Da",
        "outputId": "14767973-aa16-4336-b3e7-db786a0b284b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Probabilidad Carrera STEAM             1.000000\n",
              "Optimismo Futuro Ciencia/Tecnologia    0.463862\n",
              "Apoyo Familiar Ciencia/Mate            0.307612\n",
              "Innovaciones Tecnologicas              0.302021\n",
              "Maestros Ciencia/tecnologia            0.252246\n",
              "Sector_de_interes_futuro_Tecnología    0.192393\n",
              "Estabilidad Economica                  0.189331\n",
              "Asignaturas_Matematica                 0.107702\n",
              "Genero_Masculino                       0.069471\n",
              "Edad                                   0.066721\n",
              "ID                                     0.008874\n",
              "Ingreso Familiar                      -0.005324\n",
              "Nivel Educativo Padres                -0.023225\n",
              "Genero_Femenino                       -0.057888\n",
              "Sector_de_interes_futuro_Salud        -0.104682\n",
              "Asignaturas_Fisica                    -0.185107\n",
              "Name: Probabilidad Carrera STEAM, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Probabilidad Carrera STEAM</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Probabilidad Carrera STEAM</th>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Optimismo Futuro Ciencia/Tecnologia</th>\n",
              "      <td>0.463862</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Apoyo Familiar Ciencia/Mate</th>\n",
              "      <td>0.307612</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Innovaciones Tecnologicas</th>\n",
              "      <td>0.302021</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Maestros Ciencia/tecnologia</th>\n",
              "      <td>0.252246</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector_de_interes_futuro_Tecnología</th>\n",
              "      <td>0.192393</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Estabilidad Economica</th>\n",
              "      <td>0.189331</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Asignaturas_Matematica</th>\n",
              "      <td>0.107702</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genero_Masculino</th>\n",
              "      <td>0.069471</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Edad</th>\n",
              "      <td>0.066721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ID</th>\n",
              "      <td>0.008874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ingreso Familiar</th>\n",
              "      <td>-0.005324</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Nivel Educativo Padres</th>\n",
              "      <td>-0.023225</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genero_Femenino</th>\n",
              "      <td>-0.057888</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sector_de_interes_futuro_Salud</th>\n",
              "      <td>-0.104682</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Asignaturas_Fisica</th>\n",
              "      <td>-0.185107</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install statsmodels==0.14.4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "E7RGLfJXw9F0",
        "outputId": "2c3f0cbb-0a5c-46e8-f851-fa4351d7248a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: statsmodels==0.14.4 in /usr/local/lib/python3.11/dist-packages (0.14.4)\n",
            "Requirement already satisfied: numpy<3,>=1.22.3 in /usr/local/lib/python3.11/dist-packages (from statsmodels==0.14.4) (1.26.4)\n",
            "Requirement already satisfied: scipy!=1.9.2,>=1.8 in /usr/local/lib/python3.11/dist-packages (from statsmodels==0.14.4) (1.13.1)\n",
            "Requirement already satisfied: pandas!=2.1.0,>=1.4 in /usr/local/lib/python3.11/dist-packages (from statsmodels==0.14.4) (2.2.2)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.11/dist-packages (from statsmodels==0.14.4) (1.0.1)\n",
            "Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.11/dist-packages (from statsmodels==0.14.4) (24.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels==0.14.4) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels==0.14.4) (2025.1)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas!=2.1.0,>=1.4->statsmodels==0.14.4) (2025.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas!=2.1.0,>=1.4->statsmodels==0.14.4) (1.17.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import statsmodels.api as sm\n",
        "\n",
        "# Define the predictor variables (significant ones from correlation analysis)\n",
        "predictor_variables = [\n",
        "    'Optimismo Futuro Ciencia/Tecnologia',\n",
        "    'Apoyo Familiar Ciencia/Mate',\n",
        "    'Innovaciones Tecnologicas',\n",
        "    'Maestros Ciencia/tecnologia',\n",
        "    'Sector_de_interes_futuro_Tecnología'\n",
        "]\n",
        "\n",
        "# Define the target variable\n",
        "target_variable = 'Probabilidad Carrera STEAM'\n",
        "\n",
        "# Prepare the data for regression analysis\n",
        "X = df_numeric[predictor_variables]\n",
        "Y = df_numeric[target_variable]\n",
        "\n",
        "# Add a constant to the predictor variables (for the intercept)\n",
        "X = sm.add_constant(X)\n",
        "\n",
        "# Perform the regression analysis\n",
        "model = sm.OLS(Y, X).fit()\n",
        "\n",
        "# Store the model summary\n",
        "model_summary = model.summary()\n",
        "model_summary"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 537
        },
        "id": "tb7ZGeC7xChb",
        "outputId": "1f9ea1c4-96ed-42e3-c6b0-b90dead45eb7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                                OLS Regression Results                                \n",
              "======================================================================================\n",
              "Dep. Variable:     Probabilidad Carrera STEAM   R-squared:                       0.264\n",
              "Model:                                    OLS   Adj. R-squared:                  0.252\n",
              "Method:                         Least Squares   F-statistic:                     20.63\n",
              "Date:                        Fri, 21 Feb 2025   Prob (F-statistic):           1.35e-17\n",
              "Time:                                04:29:10   Log-Likelihood:                -423.18\n",
              "No. Observations:                         293   AIC:                             858.4\n",
              "Df Residuals:                             287   BIC:                             880.4\n",
              "Df Model:                                   5                                         \n",
              "Covariance Type:                    nonrobust                                         \n",
              "=======================================================================================================\n",
              "                                          coef    std err          t      P>|t|      [0.025      0.975]\n",
              "-------------------------------------------------------------------------------------------------------\n",
              "const                                   0.8639      0.293      2.948      0.003       0.287       1.441\n",
              "Optimismo Futuro Ciencia/Tecnologia     0.3441      0.062      5.585      0.000       0.223       0.465\n",
              "Apoyo Familiar Ciencia/Mate             0.1205      0.056      2.154      0.032       0.010       0.231\n",
              "Innovaciones Tecnologicas               0.1100      0.065      1.704      0.090      -0.017       0.237\n",
              "Maestros Ciencia/tecnologia             0.1078      0.058      1.866      0.063      -0.006       0.222\n",
              "Sector_de_interes_futuro_Tecnología     0.2148      0.125      1.712      0.088      -0.032       0.462\n",
              "==============================================================================\n",
              "Omnibus:                        3.086   Durbin-Watson:                   2.054\n",
              "Prob(Omnibus):                  0.214   Jarque-Bera (JB):                2.789\n",
              "Skew:                          -0.225   Prob(JB):                        0.248\n",
              "Kurtosis:                       3.158   Cond. No.                         36.5\n",
              "==============================================================================\n",
              "\n",
              "Notes:\n",
              "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>OLS Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>    <td>Probabilidad Carrera STEAM</td> <th>  R-squared:         </th> <td>   0.264</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                        <td>OLS</td>            <th>  Adj. R-squared:    </th> <td>   0.252</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>                  <td>Least Squares</td>       <th>  F-statistic:       </th> <td>   20.63</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>                  <td>Fri, 21 Feb 2025</td>      <th>  Prob (F-statistic):</th> <td>1.35e-17</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                      <td>04:29:10</td>          <th>  Log-Likelihood:    </th> <td> -423.18</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Observations:</th>           <td>   293</td>           <th>  AIC:               </th> <td>   858.4</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Residuals:</th>               <td>   287</td>           <th>  BIC:               </th> <td>   880.4</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Model:</th>                   <td>     5</td>           <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>           <td>nonrobust</td>         <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "                   <td></td>                      <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>const</th>                               <td>    0.8639</td> <td>    0.293</td> <td>    2.948</td> <td> 0.003</td> <td>    0.287</td> <td>    1.441</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Optimismo Futuro Ciencia/Tecnologia</th> <td>    0.3441</td> <td>    0.062</td> <td>    5.585</td> <td> 0.000</td> <td>    0.223</td> <td>    0.465</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Apoyo Familiar Ciencia/Mate</th>         <td>    0.1205</td> <td>    0.056</td> <td>    2.154</td> <td> 0.032</td> <td>    0.010</td> <td>    0.231</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Innovaciones Tecnologicas</th>           <td>    0.1100</td> <td>    0.065</td> <td>    1.704</td> <td> 0.090</td> <td>   -0.017</td> <td>    0.237</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Maestros Ciencia/tecnologia</th>         <td>    0.1078</td> <td>    0.058</td> <td>    1.866</td> <td> 0.063</td> <td>   -0.006</td> <td>    0.222</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Sector_de_interes_futuro_Tecnología</th> <td>    0.2148</td> <td>    0.125</td> <td>    1.712</td> <td> 0.088</td> <td>   -0.032</td> <td>    0.462</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Omnibus:</th>       <td> 3.086</td> <th>  Durbin-Watson:     </th> <td>   2.054</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Omnibus):</th> <td> 0.214</td> <th>  Jarque-Bera (JB):  </th> <td>   2.789</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Skew:</th>          <td>-0.225</td> <th>  Prob(JB):          </th> <td>   0.248</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Kurtosis:</th>      <td> 3.158</td> <th>  Cond. No.          </th> <td>    36.5</td>\n",
              "</tr>\n",
              "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}                          & Probabilidad Carrera STEAM & \\textbf{  R-squared:         } &     0.264   \\\\\n\\textbf{Model:}                                  &            OLS             & \\textbf{  Adj. R-squared:    } &     0.252   \\\\\n\\textbf{Method:}                                 &       Least Squares        & \\textbf{  F-statistic:       } &     20.63   \\\\\n\\textbf{Date:}                                   &      Fri, 21 Feb 2025      & \\textbf{  Prob (F-statistic):} &  1.35e-17   \\\\\n\\textbf{Time:}                                   &          04:29:10          & \\textbf{  Log-Likelihood:    } &   -423.18   \\\\\n\\textbf{No. Observations:}                       &              293           & \\textbf{  AIC:               } &     858.4   \\\\\n\\textbf{Df Residuals:}                           &              287           & \\textbf{  BIC:               } &     880.4   \\\\\n\\textbf{Df Model:}                               &                5           & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}                        &         nonrobust          & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                                                 & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{const}                                   &       0.8639  &        0.293     &     2.948  &         0.003        &        0.287    &        1.441     \\\\\n\\textbf{Optimismo Futuro Ciencia/Tecnologia}     &       0.3441  &        0.062     &     5.585  &         0.000        &        0.223    &        0.465     \\\\\n\\textbf{Apoyo Familiar Ciencia/Mate}             &       0.1205  &        0.056     &     2.154  &         0.032        &        0.010    &        0.231     \\\\\n\\textbf{Innovaciones Tecnologicas}               &       0.1100  &        0.065     &     1.704  &         0.090        &       -0.017    &        0.237     \\\\\n\\textbf{Maestros Ciencia/tecnologia}             &       0.1078  &        0.058     &     1.866  &         0.063        &       -0.006    &        0.222     \\\\\n\\textbf{Sector\\_de\\_interes\\_futuro\\_Tecnología} &       0.2148  &        0.125     &     1.712  &         0.088        &       -0.032    &        0.462     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       &  3.086 & \\textbf{  Durbin-Watson:     } &    2.054  \\\\\n\\textbf{Prob(Omnibus):} &  0.214 & \\textbf{  Jarque-Bera (JB):  } &    2.789  \\\\\n\\textbf{Skew:}          & -0.225 & \\textbf{  Prob(JB):          } &    0.248  \\\\\n\\textbf{Kurtosis:}      &  3.158 & \\textbf{  Cond. No.          } &     36.5  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import scipy.stats as stats\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Residuos del modelo\n",
        "residuos = model.resid\n",
        "\n",
        "# (Shapiro-Wilk)\n",
        "stat, p_value = stats.shapiro(residuos)\n",
        "print(f'Shapiro-Wilk Test: p-value = {p_value}')\n",
        "\n",
        "# Gráfico Q-Q\n",
        "stats.probplot(residuos, dist=\"norm\", plot=plt)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "R9ThHFlGxHfE",
        "outputId": "832fbbdc-e7c7-4f34-e96b-d387e4040fab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Shapiro-Wilk Test: p-value = 0.32791808221265417\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import statsmodels.api as sm\n",
        "from statsmodels.stats.diagnostic import het_breuschpagan\n",
        "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. PRUEBA DE HOMOCEDASTICIDAD (Breusch-Pagan) ---\n",
        "# Variables independientes del modelo\n",
        "X = model.model.exog  # Obtiene las variables independientes de la regresión\n",
        "residuos = model.resid  # Residuos del modelo\n",
        "\n",
        "# Prueba de Breusch-Pagan\n",
        "bp_test = het_breuschpagan(residuos, X)\n",
        "print(f'Breusch-Pagan Test: p-value = {bp_test[1]}')\n",
        "\n",
        "# --- 2. GRÁFICO DE RESIDUOS VS VALORES AJUSTADOS ---\n",
        "plt.scatter(model.fittedvalues, residuos, alpha=0.5)\n",
        "plt.axhline(0, color='red', linestyle='--', linewidth=2)\n",
        "plt.xlabel('Valores ajustados')\n",
        "plt.ylabel('Residuos')\n",
        "plt.title('Gráfico de residuos vs valores ajustados')\n",
        "plt.show()\n",
        "\n",
        "# --- 3. MULTICOLINEALIDAD (Factor de Inflación de Varianza - VIF) ---\n",
        "# Calcula VIF para cada variable independiente\n",
        "vif_data = pd.DataFrame()\n",
        "vif_data[\"Variable\"] = model.model.exog_names  # Nombres de las variables\n",
        "vif_data[\"VIF\"] = [variance_inflation_factor(X, i) for i in range(X.shape[1])]\n",
        "\n",
        "print(\"\\nFactor de Inflación de Varianza (VIF):\")\n",
        "print(vif_data)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 646
        },
        "id": "3WDx-3tcxNSD",
        "outputId": "a01a0182-c03e-4629-8415-f5f78bc33e20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Breusch-Pagan Test: p-value = 0.21114173140798095\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Factor de Inflación de Varianza (VIF):\n",
            "                              Variable        VIF\n",
            "0                                const  23.432547\n",
            "1  Optimismo Futuro Ciencia/Tecnologia   1.402572\n",
            "2          Apoyo Familiar Ciencia/Mate   1.228852\n",
            "3            Innovaciones Tecnologicas   1.247980\n",
            "4          Maestros Ciencia/tecnologia   1.142882\n",
            "5  Sector_de_interes_futuro_Tecnología   1.073440\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "sns.boxplot(residuos)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        },
        "id": "I07MqH-AxRkD",
        "outputId": "1d5b1880-be3d-40e6-ced8-8ee330d89aad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAiIAAAGKCAYAAAAxEyo0AAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAE4lJREFUeJzt3W2MVHe9wPHf7rYMcIVpN93uQthFtg0mRreS+lQ0vRAbpS80fWHji73X0jTU8GBiaIxsuu2GRLIxaYyJrlVeKN5bjDXxMU3T2NTafSE+VcmmJJDQi+wKhaLkziDYoWH2vrh313IL3C7XM78Z9vNJTujMHOb8SNvMlzn/Padtenp6OgAAErRnDwAAzF9CBABII0QAgDRCBABII0QAgDRCBABII0QAgDRCBABIc132AFdSr9fj+PHjsWTJkmhra8seBwB4C6anp+PMmTOxfPnyaG+/8nceTR0ix48fj97e3uwxAICrMDU1FStWrLjiPk0dIkuWLImI//6DLF26NHkaAOCtqFar0dvbO/s5fiVNHSIzp2OWLl0qRACgxbyVZRUWqwIAaYQIAJBGiAAAaYQIAJBGiAAAaYQIAJBGiAAAaYQIAJBGiAAAaYQIAJBGiAAAaYQIAJCmqW96B/9or732WkxOTmaPAU2pr68vFi5cmD0G84wQYV6ZnJyMBx98MHsMaEq7d++O1atXZ4/BPCNEmFf6+vpi9+7d2WMQEUePHo1du3bFww8/HCtXrsweh/jv/z+g0YQI88rChQv9ja/JrFy50r8TmMcsVgUA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0hQaIqOjo/G+970vlixZEjfffHPcc889cejQoSIPCQC0kEJD5IUXXoitW7fGr371q3j22Wfj9ddfj49+9KNx9uzZIg8LALSI64p882eeeeaix3v27Imbb745XnzxxbjzzjuLPDQA0AIaukakUqlERERnZ2cjDwsANKlCvxF5o3q9Hp/73OfiQx/6ULzrXe+65D61Wi1qtdrs42q12qjxAIAEDftGZOvWrfHSSy/F9773vcvuMzo6GuVyeXbr7e1t1HgAQIKGhMi2bdviqaeeiueffz5WrFhx2f2GhoaiUqnMblNTU40YDwBIUuipmenp6fjsZz8bP/rRj+IXv/hFrFq16or7l0qlKJVKRY4EADSRQkNk69at8d3vfjd+8pOfxJIlS+LEiRMREVEul2PRokVFHhoAaAGFnpp5/PHHo1KpxLp162LZsmWz25NPPlnkYQGAFlH4qRkAgMtxrxkAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAIE2hITI+Ph4f//jHY/ny5dHW1hY//vGPizwcANBiCg2Rs2fPxm233RZjY2NFHgYAaFHXFfnmd999d9x9991FHgIAaGGFhshc1Wq1qNVqs4+r1WriNABA0Zpqsero6GiUy+XZrbe3N3skAKBATRUiQ0NDUalUZrepqanskQCAAjXVqZlSqRSlUil7DACgQZrqGxEAYH4p9BuRv/71r3H48OHZx0eOHIn9+/dHZ2dn9PX1FXloAKAFFBoiv/vd72L9+vWzj7dv3x4REffdd1/s2bOnyEMDAC2g0BBZt25dTE9PF3kIAKCFWSMCAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQp9O67/N3JkyejUqlkjwFN4+jRoxf9CvxduVyO7u7u7DEaom16eno6e4jLqVarUS6Xo1KpxNKlS7PHuWonT56Mf/nXT8fr52vZowDQAq5fUIon/v3fWjZG5vL57RuRBqhUKvH6+Vr8rf+fo76wnD0OAE2s/bVKxH+8EJVKpWVDZC6ESAPVF5aj/k83ZY8BAE3DYlUAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSCBEAII0QAQDSNCRExsbG4u1vf3ssXLgwPvCBD8RvfvObRhwWAGhyhYfIk08+Gdu3b4+RkZH4/e9/H7fddlt87GMfi1dffbXoQwMATa7wEPnyl78cmzZtivvvvz/e+c53xje+8Y1YvHhxfOtb3yr60ABAk7uuyDc/f/58vPjiizE0NDT7XHt7e9x1112xb9++N+1fq9WiVqvNPq5Wq0WO13Dtf/vP7BEAaHLz7bOi0BD585//HBcuXIju7u6Lnu/u7o6DBw++af/R0dHYuXNnkSOlWnRkPHsEAGgqhYbIXA0NDcX27dtnH1er1ejt7U2c6B/rb6vujPqiG7LHAKCJtf/tP+fVX1wLDZGbbropOjo64uTJkxc9f/Lkyejp6XnT/qVSKUqlUpEjpaovuiHq/3RT9hgA0DQKXay6YMGCuP322+O5556bfa5er8dzzz0Xd9xxR5GHBgBaQOGnZrZv3x733XdfvPe97433v//98ZWvfCXOnj0b999/f9GHBgCaXOEh8qlPfSpOnToVjz76aJw4cSLe8573xDPPPPOmBawAwPzTkMWq27Zti23btjXiUABAC3GvGQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANIIEQAgjRABANJclz3AfNL+WiV7BACa3Hz7rBAiDVAul+P6BaWI/3ghexQAWsD1C0pRLpezx2gIIdIA3d3d8cS//1tUKvOrcuFKjh49Grt27YqHH344Vq5cmT0ONJVyuRzd3d3ZYzSEEGmQ7u7uefMfFczFypUrY/Xq1dljAEksVgUA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACBNYSGya9euWLt2bSxevDhuuOGGog4DALSwwkLk/Pnzce+998bmzZuLOgQA0OKuK+qNd+7cGRERe/bsKeoQAECLKyxErkatVotarTb7uFqtJk4DABStqRarjo6ORrlcnt16e3uzRwIACjSnENmxY0e0tbVdcTt48OBVDzM0NBSVSmV2m5qauur3AgCa35xOzTz00EOxcePGK+7T399/1cOUSqUolUpX/fsBgNYypxDp6uqKrq6uomYBAOaZwharTk5OxunTp2NycjIuXLgQ+/fvj4iIW2+9Nd72trcVdVgAoIUUFiKPPvpofOc735l9vGbNmoiIeP7552PdunVFHRYAaCGF/dTMnj17Ynp6+k2bCAEAZjTVj+8CAPOLEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACBNYSHyxz/+MR544IFYtWpVLFq0KG655ZYYGRmJ8+fPF3VIAKDFXFfUGx88eDDq9Xp885vfjFtvvTVeeuml2LRpU5w9ezYee+yxog4LALSQwkJkw4YNsWHDhtnH/f39cejQoXj88ceFCAAQEQWGyKVUKpXo7Oy87Ou1Wi1qtdrs42q12oixAIAkDVusevjw4fjqV78an/nMZy67z+joaJTL5dmtt7e3UeMBAAnmHCI7duyItra2K24HDx686PccO3YsNmzYEPfee29s2rTpsu89NDQUlUpldpuampr7nwgAaBlzPjXz0EMPxcaNG6+4T39//+w/Hz9+PNavXx9r166N3bt3X/H3lUqlKJVKcx0JAGhRcw6Rrq6u6Orqekv7Hjt2LNavXx+33357fPvb3472dpctAQD+rrDFqseOHYt169bFypUr47HHHotTp07NvtbT01PUYQGAFlJYiDz77LNx+PDhOHz4cKxYseKi16anp4s6LADQQgo7V7Jx48aYnp6+5AYAEOFeMwBAIiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAmuuyB4BGeu2112JycjJ7DCLi6NGjF/1Kvr6+vli4cGH2GMwzQoR5ZXJyMh588MHsMXiDXbt2ZY/A/9i9e3esXr06ewzmGSHCvNLX1xe7d+/OHgOaUl9fX/YIzENChHll4cKF/sYH0EQsVgUA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNEAEA0ggRACCNm94BDXfhwoWYmJiI06dPR2dnZwwMDERHR0f2WEACIQI01Pj4eHz961+PEydOzD7X09MTW7ZsiTvvvDNxMiCDUzNAw4yPj8fIyEj09/fH2NhYPP300zE2Nhb9/f0xMjIS4+Pj2SMCDdY2PT09nT3E5VSr1SiXy1GpVGLp0qXZ4wD/DxcuXIjBwcHo7++PL37xi9He/ve/B9Xr9RgeHo4jR47EE0884TQNtLi5fH77RgRoiImJiThx4kQMDg5eFCEREe3t7TE4OBivvPJKTExMJE0IZBAiQEOcPn06IiJWrVp1yddnnp/ZD5gfhAjQEJ2dnRERceTIkUu+PvP8zH7A/CBEgIYYGBiInp6e2Lt3b9Tr9Yteq9frsXfv3li2bFkMDAwkTQhkECJAQ3R0dMSWLVti3759MTw8HAcOHIhz587FgQMHYnh4OPbt2xebN2+2UBXmGT81AzTUpa4jsmzZsti8ebPriMA1Yi6f30IEaDhXVoVr21w+vwu9suonPvGJ2L9/f7z66qtx4403xl133RVf+tKXYvny5UUeFmhyHR0dsWbNmuwxgCZQ6BqR9evXx/e///04dOhQ/OAHP4iXX345PvnJTxZ5SACghTT01MxPf/rTuOeee6JWq8X111//f+7v1AwAtJ6mOTXzRqdPn469e/fG2rVrLxshtVotarXa7ONqtdqo8YAGskYEmFF4iHzhC1+Ir33ta3Hu3Ln44Ac/GE899dRl9x0dHY2dO3cWPRKQyN13gTea8xqRHTt2RFtb2xW3gwcPzu7/+c9/Pv7whz/Ez372s+jo6IhPf/rTcbmzQUNDQ1GpVGa3qampq/+TAU3H3XeB/23Oa0ROnToVf/nLX664T39/fyxYsOBNz//pT3+K3t7e+OUvfxl33HHH/3ksa0Tg2uHuuzB/FLpGpKurK7q6uq5qsJnLOr9xHQgwP8zcffeRRx657N13t27dGhMTE360F+aRwtaI/PrXv47f/va38eEPfzhuvPHGePnll+ORRx6JW2655S19GwJcW9x9F7iUwq4jsnjx4vjhD38YH/nIR+Id73hHPPDAAzEwMBAvvPBClEqlog4LNCl33wUupbBvRN797nfHz3/+86LeHmgxb7z77qXWiLj7LsxP7r4LNIS77wKX4qZ3QEO5+y5c+9x9F2hqrqwK17amvMQ7wAx33wVmWCMCAKQRIgBAGiECAKQRIgBAGiECAKQRIgBAGj++CzSc64gAM4QI0FCXurJqT09PbNmyxZVVYR5yagZomPHx8RgZGYn+/v4YGxuLp59+OsbGxqK/vz9GRkZifHw8e0SgwVziHWiICxcuxODgYPT391/y7rvDw8Nx5MiReOKJJ5ymgRY3l89v34gADTExMREnTpyIwcHBiyIkIqK9vT0GBwfjlVdeiYmJiaQJgQxCBGiI06dPR0TEqlWrLvn6zPMz+wHzgxABGqKzszMiIo4cOXLJ12een9kPmB+ECNAQAwMD0dPTE3v37o16vX7Ra/V6Pfbu3RvLli2LgYGBpAmBDEIEaIiOjo7YsmVL7Nu3L4aHh+PAgQNx7ty5OHDgQAwPD8e+ffti8+bNFqrCPOOnZoCGutR1RJYtWxabN292HRG4Rszl81uIAA3nyqpwbZvL57crqwIN19HREWvWrMkeA2gC1ogAAGmECACQRogAAGmECACQRogAAGmECACQRogAAGmECACQRogAAGma+sqqM1efr1aryZMAAG/VzOf2W7mLTFOHyJkzZyIiore3N3kSAGCuzpw5E+Vy+Yr7NPVN7+r1ehw/fjyWLFkSbW1t2eMA/0DVajV6e3tjamrKTS3hGjM9PR1nzpyJ5cuXR3v7lVeBNHWIANcud9cGIixWBQASCREAII0QAVKUSqUYGRmJUqmUPQqQyBoRACCNb0QAgDRCBABII0QAgDRCBABII0QAgDRCBABII0QAgDRCBABI818sJSfYW/Bn5AAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: anova\n",
        "\n",
        "import statsmodels.formula.api as sm\n",
        "\n",
        "# Define the formula for the ANOVA\n",
        "formula = 'Probabilidad_Carrera_STEAM ~ C(Genero_Femenino)'\n",
        "\n",
        "# Perform the ANOVA test\n",
        "model = sm.ols(formula, data=df).fit()\n",
        "anova_table = sm.stats.anova_lm(model, typ=2)\n",
        "\n",
        "# Print the ANOVA table\n",
        "anova_table\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 443
        },
        "id": "dMX9bOO9xecs",
        "outputId": "27de360f-ba2b-4fa1-e50f-9e3d2b47845f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "PatsyError",
          "evalue": "Error evaluating factor: NameError: name 'Probabilidad_Carrera_STEAM' is not defined\n    Probabilidad_Carrera_STEAM ~ C(Genero_Femenino)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/compat.py\u001b[0m in \u001b[0;36mcall_and_wrap_exc\u001b[0;34m(msg, origin, f, *args, **kwargs)\u001b[0m\n\u001b[1;32m     39\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 40\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     41\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/eval.py\u001b[0m in \u001b[0;36meval\u001b[0;34m(self, expr, source_name, inner_namespace)\u001b[0m\n\u001b[1;32m    178\u001b[0m         \u001b[0mcode\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexpr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msource_name\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"eval\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 179\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mVarLookupDict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0minner_namespace\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_namespaces\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    180\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<string>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'Probabilidad_Carrera_STEAM' is not defined",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mPatsyError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-21-e2ddbe5104cc>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m# Perform the ANOVA test\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mols\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mformula\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0manova_table\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstats\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0manova_lm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtyp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/statsmodels/base/model.py\u001b[0m in \u001b[0;36mfrom_formula\u001b[0;34m(cls, formula, data, subset, drop_cols, *args, **kwargs)\u001b[0m\n\u001b[1;32m    201\u001b[0m             \u001b[0mmissing\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'raise'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 203\u001b[0;31m         tmp = handle_formula_data(data, None, formula, depth=eval_env,\n\u001b[0m\u001b[1;32m    204\u001b[0m                                   missing=missing)\n\u001b[1;32m    205\u001b[0m         \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mendog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmissing_idx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdesign_info\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtmp\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/statsmodels/formula/formulatools.py\u001b[0m in \u001b[0;36mhandle_formula_data\u001b[0;34m(Y, X, formula, depth, missing)\u001b[0m\n\u001b[1;32m     61\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdata_util\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_is_using_pandas\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mY\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 63\u001b[0;31m             result = dmatrices(formula, Y, depth, return_type='dataframe',\n\u001b[0m\u001b[1;32m     64\u001b[0m                                NA_action=na_action)\n\u001b[1;32m     65\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/highlevel.py\u001b[0m in \u001b[0;36mdmatrices\u001b[0;34m(formula_like, data, eval_env, NA_action, return_type)\u001b[0m\n\u001b[1;32m    317\u001b[0m     \"\"\"\n\u001b[1;32m    318\u001b[0m     \u001b[0meval_env\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mEvalEnvironment\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcapture\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0meval_env\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreference\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 319\u001b[0;31m     (lhs, rhs) = _do_highlevel_design(\n\u001b[0m\u001b[1;32m    320\u001b[0m         \u001b[0mformula_like\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0meval_env\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNA_action\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_type\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    321\u001b[0m     )\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/highlevel.py\u001b[0m in \u001b[0;36m_do_highlevel_design\u001b[0;34m(formula_like, data, eval_env, NA_action, return_type)\u001b[0m\n\u001b[1;32m    162\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0miter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    163\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 164\u001b[0;31m     design_infos = _try_incr_builders(\n\u001b[0m\u001b[1;32m    165\u001b[0m         \u001b[0mformula_like\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata_iter_maker\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0meval_env\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNA_action\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    166\u001b[0m     )\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/highlevel.py\u001b[0m in \u001b[0;36m_try_incr_builders\u001b[0;34m(formula_like, data_iter_maker, eval_env, NA_action)\u001b[0m\n\u001b[1;32m     54\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mformula_like\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mModelDesc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     55\u001b[0m         \u001b[0;32massert\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0meval_env\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mEvalEnvironment\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 56\u001b[0;31m         return design_matrix_builders(\n\u001b[0m\u001b[1;32m     57\u001b[0m             \u001b[0;34m[\u001b[0m\u001b[0mformula_like\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlhs_termlist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mformula_like\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrhs_termlist\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     58\u001b[0m             \u001b[0mdata_iter_maker\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/build.py\u001b[0m in \u001b[0;36mdesign_matrix_builders\u001b[0;34m(termlists, data_iter_maker, eval_env, NA_action)\u001b[0m\n\u001b[1;32m    744\u001b[0m     \u001b[0;31m# Now all the factors have working eval methods, so we can evaluate them\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    745\u001b[0m     \u001b[0;31m# on some data to find out what type of data they return.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 746\u001b[0;31m     (num_column_counts, cat_levels_contrasts) = _examine_factor_types(\n\u001b[0m\u001b[1;32m    747\u001b[0m         \u001b[0mall_factors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfactor_states\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata_iter_maker\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNA_action\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    748\u001b[0m     )\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/build.py\u001b[0m in \u001b[0;36m_examine_factor_types\u001b[0;34m(factors, factor_states, data_iter_maker, NA_action)\u001b[0m\n\u001b[1;32m    489\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdata_iter_maker\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    490\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mfactor\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexamine_needed\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 491\u001b[0;31m             \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfactor\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfactor_states\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mfactor\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    492\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mfactor\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcat_sniffers\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mguess_categorical\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    493\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mfactor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcat_sniffers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/eval.py\u001b[0m in \u001b[0;36meval\u001b[0;34m(self, memorize_state, data)\u001b[0m\n\u001b[1;32m    597\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    598\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmemorize_state\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 599\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_eval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmemorize_state\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"eval_code\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmemorize_state\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    600\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    601\u001b[0m     \u001b[0m__getstate__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mno_pickling\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/eval.py\u001b[0m in \u001b[0;36m_eval\u001b[0;34m(self, code, memorize_state, data)\u001b[0m\n\u001b[1;32m    580\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_eval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmemorize_state\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    581\u001b[0m         \u001b[0minner_namespace\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mVarLookupDict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmemorize_state\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"transforms\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 582\u001b[0;31m         return call_and_wrap_exc(\n\u001b[0m\u001b[1;32m    583\u001b[0m             \u001b[0;34m\"Error evaluating factor\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    584\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/patsy/compat.py\u001b[0m in \u001b[0;36mcall_and_wrap_exc\u001b[0;34m(msg, origin, f, *args, **kwargs)\u001b[0m\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m         \u001b[0mnew_exc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mPatsyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"%s: %s: %s\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__class__\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morigin\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mnew_exc\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mPatsyError\u001b[0m: Error evaluating factor: NameError: name 'Probabilidad_Carrera_STEAM' is not defined\n    Probabilidad_Carrera_STEAM ~ C(Genero_Femenino)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: codigo par aimprimir\n",
        "\n",
        "model_summary\n"
      ],
      "metadata": {
        "id": "me605MO8xkO1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 537
        },
        "outputId": "ff438e2c-857d-4832-c10c-137ff7b8e68b"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                                OLS Regression Results                                \n",
              "======================================================================================\n",
              "Dep. Variable:     Probabilidad Carrera STEAM   R-squared:                       0.264\n",
              "Model:                                    OLS   Adj. R-squared:                  0.252\n",
              "Method:                         Least Squares   F-statistic:                     20.63\n",
              "Date:                        Fri, 21 Feb 2025   Prob (F-statistic):           1.35e-17\n",
              "Time:                                04:29:10   Log-Likelihood:                -423.18\n",
              "No. Observations:                         293   AIC:                             858.4\n",
              "Df Residuals:                             287   BIC:                             880.4\n",
              "Df Model:                                   5                                         \n",
              "Covariance Type:                    nonrobust                                         \n",
              "=======================================================================================================\n",
              "                                          coef    std err          t      P>|t|      [0.025      0.975]\n",
              "-------------------------------------------------------------------------------------------------------\n",
              "const                                   0.8639      0.293      2.948      0.003       0.287       1.441\n",
              "Optimismo Futuro Ciencia/Tecnologia     0.3441      0.062      5.585      0.000       0.223       0.465\n",
              "Apoyo Familiar Ciencia/Mate             0.1205      0.056      2.154      0.032       0.010       0.231\n",
              "Innovaciones Tecnologicas               0.1100      0.065      1.704      0.090      -0.017       0.237\n",
              "Maestros Ciencia/tecnologia             0.1078      0.058      1.866      0.063      -0.006       0.222\n",
              "Sector_de_interes_futuro_Tecnología     0.2148      0.125      1.712      0.088      -0.032       0.462\n",
              "==============================================================================\n",
              "Omnibus:                        3.086   Durbin-Watson:                   2.054\n",
              "Prob(Omnibus):                  0.214   Jarque-Bera (JB):                2.789\n",
              "Skew:                          -0.225   Prob(JB):                        0.248\n",
              "Kurtosis:                       3.158   Cond. No.                         36.5\n",
              "==============================================================================\n",
              "\n",
              "Notes:\n",
              "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>OLS Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>    <td>Probabilidad Carrera STEAM</td> <th>  R-squared:         </th> <td>   0.264</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                        <td>OLS</td>            <th>  Adj. R-squared:    </th> <td>   0.252</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>                  <td>Least Squares</td>       <th>  F-statistic:       </th> <td>   20.63</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>                  <td>Fri, 21 Feb 2025</td>      <th>  Prob (F-statistic):</th> <td>1.35e-17</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                      <td>04:29:10</td>          <th>  Log-Likelihood:    </th> <td> -423.18</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Observations:</th>           <td>   293</td>           <th>  AIC:               </th> <td>   858.4</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Residuals:</th>               <td>   287</td>           <th>  BIC:               </th> <td>   880.4</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Df Model:</th>                   <td>     5</td>           <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>           <td>nonrobust</td>         <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "                   <td></td>                      <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>const</th>                               <td>    0.8639</td> <td>    0.293</td> <td>    2.948</td> <td> 0.003</td> <td>    0.287</td> <td>    1.441</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Optimismo Futuro Ciencia/Tecnologia</th> <td>    0.3441</td> <td>    0.062</td> <td>    5.585</td> <td> 0.000</td> <td>    0.223</td> <td>    0.465</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Apoyo Familiar Ciencia/Mate</th>         <td>    0.1205</td> <td>    0.056</td> <td>    2.154</td> <td> 0.032</td> <td>    0.010</td> <td>    0.231</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Innovaciones Tecnologicas</th>           <td>    0.1100</td> <td>    0.065</td> <td>    1.704</td> <td> 0.090</td> <td>   -0.017</td> <td>    0.237</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Maestros Ciencia/tecnologia</th>         <td>    0.1078</td> <td>    0.058</td> <td>    1.866</td> <td> 0.063</td> <td>   -0.006</td> <td>    0.222</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Sector_de_interes_futuro_Tecnología</th> <td>    0.2148</td> <td>    0.125</td> <td>    1.712</td> <td> 0.088</td> <td>   -0.032</td> <td>    0.462</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Omnibus:</th>       <td> 3.086</td> <th>  Durbin-Watson:     </th> <td>   2.054</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Omnibus):</th> <td> 0.214</td> <th>  Jarque-Bera (JB):  </th> <td>   2.789</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Skew:</th>          <td>-0.225</td> <th>  Prob(JB):          </th> <td>   0.248</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Kurtosis:</th>      <td> 3.158</td> <th>  Cond. No.          </th> <td>    36.5</td>\n",
              "</tr>\n",
              "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}                          & Probabilidad Carrera STEAM & \\textbf{  R-squared:         } &     0.264   \\\\\n\\textbf{Model:}                                  &            OLS             & \\textbf{  Adj. R-squared:    } &     0.252   \\\\\n\\textbf{Method:}                                 &       Least Squares        & \\textbf{  F-statistic:       } &     20.63   \\\\\n\\textbf{Date:}                                   &      Fri, 21 Feb 2025      & \\textbf{  Prob (F-statistic):} &  1.35e-17   \\\\\n\\textbf{Time:}                                   &          04:29:10          & \\textbf{  Log-Likelihood:    } &   -423.18   \\\\\n\\textbf{No. Observations:}                       &              293           & \\textbf{  AIC:               } &     858.4   \\\\\n\\textbf{Df Residuals:}                           &              287           & \\textbf{  BIC:               } &     880.4   \\\\\n\\textbf{Df Model:}                               &                5           & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}                        &         nonrobust          & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                                                 & \\textbf{coef} & \\textbf{std err} & \\textbf{t} & \\textbf{P$> |$t$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{const}                                   &       0.8639  &        0.293     &     2.948  &         0.003        &        0.287    &        1.441     \\\\\n\\textbf{Optimismo Futuro Ciencia/Tecnologia}     &       0.3441  &        0.062     &     5.585  &         0.000        &        0.223    &        0.465     \\\\\n\\textbf{Apoyo Familiar Ciencia/Mate}             &       0.1205  &        0.056     &     2.154  &         0.032        &        0.010    &        0.231     \\\\\n\\textbf{Innovaciones Tecnologicas}               &       0.1100  &        0.065     &     1.704  &         0.090        &       -0.017    &        0.237     \\\\\n\\textbf{Maestros Ciencia/tecnologia}             &       0.1078  &        0.058     &     1.866  &         0.063        &       -0.006    &        0.222     \\\\\n\\textbf{Sector\\_de\\_interes\\_futuro\\_Tecnología} &       0.2148  &        0.125     &     1.712  &         0.088        &       -0.032    &        0.462     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Omnibus:}       &  3.086 & \\textbf{  Durbin-Watson:     } &    2.054  \\\\\n\\textbf{Prob(Omnibus):} &  0.214 & \\textbf{  Jarque-Bera (JB):  } &    2.789  \\\\\n\\textbf{Skew:}          & -0.225 & \\textbf{  Prob(JB):          } &    0.248  \\\\\n\\textbf{Kurtosis:}      &  3.158 & \\textbf{  Cond. No.          } &     36.5  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{OLS Regression Results}\n\\end{center}\n\nNotes: \\newline\n [1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    }
  ]
}